name: Deploy gh-pages

on:
  push:
    branch:
    - master

jobs:
  build-cv:
    name: Build CV
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Build CV
      run: |
        BUILD_PATH="$PWD/build"
        echo "BUILD_PATH=$BUILD_PATH" >> $GITHUB_ENV
        mkdir -p $BUILD_PATH
        cd apps/main
        npm install
        BUILD_PATH=$BUILD_PATH npm run build
        echo $PWD/build
    - name: Upload built CV
      uses: actions/upload-artifact@v3
      with:
        name: main-app
        path: ${{ env.BUILD_PATH }}
  build-blog:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build Blog
      run: |
        JEKYLL_ROOT=${{ github.workspace }}/apps/jekyll/m2ng
        echo "JEKYLL_ROOT=$JEKYLL_ROOT" >> $GITHUB_ENV
        docker run \
          -v $JEKYLL_ROOT:/srv/jekyll \
          -v $JEKYLL_ROOT/_site:/srv/jekyll/_site \
        jekyll/builder:latest /bin/bash -c "ls /srv/jekyll && bundle install && chmod -R 777 /srv/jekyll && jekyll build --future"
    - name: List built blog
      run: |
        ls $JEKYLL_ROOT
        echo; echo;
        ls $JEKYLL_ROOT/_site
    - name: Upload built blog
      uses: actions/upload-artifact@v3
      with:
        name: blog-app
        path: ${{ env.JEKYLL_ROOT }}/_site
  build:
    runs-on: ubuntu-latest
    needs: [ build-cv, build-blog ]
    env:
      CI_PRI      : ${{secrets.CI_PRI}}
      USER_NAME   : Matthew Ng
      USER_EMAIL  : ngmhmatthew@gmail.com
    steps:
    - name: Initialize SSH config
      run: |
        mkdir -p ~/.ssh
        echo "github.com ssh-ed25519 SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU" >> ~/.ssh/known_hosts
        echo -n $CI_PRI | base64 -d > ~/.ssh/id_ci_pri
        chmod 400 ~/.ssh/id_ci_pri
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_ci_pri
    - name: Initialize folders
      run: |
        CURRENT_DIR=${{ github.workspace }}/current
        echo "CURRENT_DIR=$CURRENT_DIR" >> $GITHUB_ENV
        mkdir -p $CURRENT_DIR
        BUILD_DIR=${{ github.workspace }}/build
        echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV
        mkdir -p $BUILD_DIR
    # - name: Get current release
    #   uses: actions/checkout@v3
    #   with:
    #     path: ${{ env.CURRENT_DIR }}
    - name: "Download all artifacts"
      uses: actions/download-artifact@v3
      with:
        path: .
    - name: Pack and cleanup
      run: |
        BUILD_DIR=${{ env.BUILD_DIR }}
        cp -r main-app/* $BUILD_DIR/
        mkdir $BUILD_DIR/blog
        cp -r blog-app/* $BUILD_DIR/blog/
        rm -rf main-app
        rm -rf blog-app
        cd $BUILD_DIR && ls -R
    - name: Deploy
      run: |
        cd ${{ env.CURRENT_DIR }}
        git init
        git config --local user.name ${{ env.USER_NAME }}
        git config --local user.email ${{ env.USER_EMAIL }}
        git status
        git remote add origin git@github.com:m2ng/m2ng.github.io.git
        git checkout -b gh-pages-test
        cp -r ${{ env.BUILD_DIR }} .
        git add --all
        git commit -m "Deploy"
        git push origin gh-pages-test -f
        echo "Success"

      
